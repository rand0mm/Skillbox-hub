// window доступен всегда и везде, он задает глобальный контекст
console.log(window);

// блок кода
{
    //не сработает, переменная х объявлена ниже и до объявление не является
    // частью котекста выполнения
    console.log(x);

    let x = 10;

    // x стал частью контекста
    console.log(x);

    {
        //вложенный блок, где х тоже доступен
        console.log(x);
    }
}

// а вот за пределами блока, в котором мы объявили переменную х 
// она уже не ялвяется частью контекста, поэтому обратится к ней не получится
console.log(x); // не сработает

const me = {
    name: '',
    whoAmI() {
        //this - объект, в котором находится метод whoAmI
        console.log(this.name)
    }
}

// можно сказать, что перед вызовом метода обхекта мы присваиваем к 
// this оъект, указаннный до точки, тоесть me
me.whoAmI();

//пример

// это просто функция, она не является методом объекта
function logThis() {
    console.log(this);
}

// По умолчанию this будет равен глобальному объекту window, но не спешите 
// этим пользоваться! Во-первый, вы вполне успешно можете работать с window
// и напрямую, а во-вторых, this может быть изменен, из-за чего перестанет работать.
logThis();

// у всех функций есть специальные методы call, apply и bind. Подробно о них в статье.
// метод call вызывает функцию со значение this, которое мы передаем первым аргументом.
// таким образом logThis выведет в этом примере 42

logThis.call(42);

// Мы даже может переопределить this для методов уже сформированных объектов

const me1 = {
    name: 'Тимофей',
    whoAmI() {
        //this - объект, в котором находится метод whoAmI
        console.log(this.name)
    }
}

const notMe = {
    name :'Не Тимофей'
}

// меняем this с помощью call
me1.whoAmI.call(notMe)   // Не Тимофей

// Помните, что трюк с подменой this не будет работать со стрелочными ф-циями!
// Стрелочные функции всегда берут this из родительской области видимости
// что бы вы с ними не делали!
const arrowLogThis = () => {
    console.log(this)
}
arrowLogThis.call(42) // this равен window